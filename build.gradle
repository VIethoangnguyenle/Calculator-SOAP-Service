plugins {
	id 'org.springframework.boot' version '2.5.1'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
}

group = 'com.hoang'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

repositories {
	mavenCentral()
}

task genJaxb {
	ext.sourcesDir = "${buildDir}/generated-sources/jaxb"
	ext.classesDir = "${buildDir}/classes/jaxb"
	ext.schema = "/home/viethoang/Desktop/kss_docs/testSOAPService2/src/main/resources/calculator.wsdl"

	outputs.dir classesDir

	doLast() {
		project.ant {
			// Create output directories
			taskdef name: 'xjc', classname: 'com.sun.tools.xjc.XJCTask',
					classpath: configurations.jaxb.asPath

			mkdir(dir: sourcesDir)
			mkdir(dir: classesDir)

			xjc(destdir: sourcesDir, schema: schema, package: "com.hoang.testSOAPService2.client") {
				arg(value: "-wsdl")
				produces(dir: sourcesDir, includes: "**/*.java")
			}

			javac(destdir: classesDir, source: 1.8, target: 1.8, debug: true,
					debugLevel: 'lines,vars,source',
					classpath: configurations.jaxb.asPath) {
				src(path: sourcesDir)
				include(name: '**/*.java')
				include(name: '*.java')
			}

			copy(todir: classesDir) {
				fileset(dir: sourcesDir, erroronmissingdir: false) {
					exclude(name: '**/*.java')
				}
			}
		}
	}
}
task afterEclipseImport {
	dependsOn "genJaxb"
}

configurations {
	jaxb
}
jar {
	from genJaxb.classesDir
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-web-services'
	compileOnly 'org.projectlombok:lombok'

	implementation 'wsdl4j:wsdl4j:1.6.2'

	annotationProcessor 'org.projectlombok:lombok'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	implementation 'org.glassfish.jaxb:jaxb-runtime'
	implementation(files(genJaxb.classesDir).builtBy(genJaxb))
	jaxb 'com.sun.xml.bind:jaxb-xjc:2.1.7'
}
test {
	useJUnitPlatform()
}
